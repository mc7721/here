{
    "openapi": "3.0.0",
    "info": {
        "version": "",
        "title": "Custom Location Extension API",
        "description": "The **HERE Custom Location Extension** is a service that stores and retrieves custom locations.\nLocations can be uploaded as CSV files or Shapefile standard compliant shapes via an administration website or as XML files via HTTP POST requests to the RESTful API. Locations can be retrieved by making an HTTP GET requests to the RESTful API. \n\n\nThe Custom Location Extension API provides solutions for the following high level use cases:\n\n* Store custom sets of locations and polygons, for use with other HERE APIs.\n* Perform a proximity search for custom points of interest and polygons around a specified location.\n* Retrieve a set of custom points of interest (POIs) and\/or polygons within a specified bounding box.\n* Find all custom locations and polygons within an isoline route result.\n* Find all custom locations and polygons within a specified radius of a defined route.\n* Search custom indices generated from multiple fields from one or more layers.\n\nThis example set works with version **1.7",
        "termsOfService": ""
    },
    "servers": [
        "httpscustomlocation.cit.api.here.com\/v1\/search"
    ],
    "paths": {
        "\/bbox": {
            "get": {
                "summary": "Find Locations within a Bounding Box",
                "description": "*Request a list of user-defined locations within a defined area*\n\nThe request uses the `bbox` endpoint, and the bounding box is specified by adding the `bbox` parameter to the request URL.\n\n\n\n* **layerId**  `text`\n \\- Unique indicator used to retrieve a dataset\n\n* **bbox**  `bbox`\n \\- Restricts results to be found within this bounding box\n\n* **app_id**  `text`\n \\- A 20 byte Base64 URL-safe encoded string used for the authentication of the client application.    You must include an `app_id` with ",
                "operationId": "BboxGet2",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "layerId",
                        "in": "query",
                        "description": ""
                    },
                    {
                        "name": "bbox",
                        "in": "query",
                        "description": ""
                    },
                    {
                        "name": "app_id",
                        "in": "query",
                        "description": ""
                    },
                    {
                        "name": "app_code",
                        "in": "query",
                        "description": ""
                    }
                ]
            }
        },
        "\/attribute": {
            "get": {
                "summary": "Filtering by Custom Attributes",
                "description": "*Request a list of user-defined locations based on their attribute values*\n\nAn attribute-based search is requested using the `attribute` endpoint and by adding the `query` parameter to the request URL.\n\n\n\n* **layerId**  `text`\n \\- Unique indicator used to retrieve a dataset\n\n* **query**  `text`\n \\- The query to retrieve\n\n* **app_id**  `text`\n \\- A 20 byte Base64 URL-safe encoded string used for the authentication of the client application.    You must include an `app_id` with every request.\n\n* *",
                "operationId": "AttributeGet",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "layerId",
                        "in": "query",
                        "description": ""
                    },
                    {
                        "name": "query",
                        "in": "query",
                        "description": ""
                    },
                    {
                        "name": "app_id",
                        "in": "query",
                        "description": ""
                    },
                    {
                        "name": "app_code",
                        "in": "query",
                        "description": ""
                    }
                ]
            }
        },
        "\/proximity": {
            "get": {
                "summary": "Find the Five Nearest Locations",
                "description": "*Request a list of user-defined locations within a circle around a fixed point*\n\nThe search uses the `proximity` endpoint. The definition of the location and limit of the search is specified using  `coord` and `radius` parameters, and the number of results returned limited by adding the `limit` parameter to the request URL.\n\n\n\n* **layerId**  `text`\n \\- Unique indicator used to retrieve a dataset\n\n* **coord**  `latlng`\n \\- Center of the proximity search\n\n* **radius**  `number`\n \\- width of the se",
                "operationId": "ProximityGet2",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "layerId",
                        "in": "query",
                        "description": ""
                    },
                    {
                        "name": "coord",
                        "in": "query",
                        "description": ""
                    },
                    {
                        "name": "radius",
                        "in": "query",
                        "description": ""
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": ""
                    },
                    {
                        "name": "app_id",
                        "in": "query",
                        "description": ""
                    },
                    {
                        "name": "app_code",
                        "in": "query",
                        "description": ""
                    }
                ]
            }
        },
        "\/route\/corridor": {
            "get": {
                "summary": "Find Locations along a pre-defined Route",
                "description": "*Request a list of user-defined locations along a pre-defined route*\n\nThe route has been pre-calculated and the `routeid` has already been acquired from a previous routing request. A route-based corridor search is requested using the `corridor` endpoint and by adding the `routeid` parameter to the request URL, along with a corridor `width`.\n\n\n\n* **layerId**  `text`\n \\- Unique indicator used to retrieve a dataset\n\n* **routeId**  `text`\n \\- A <b>previously<\/b> calculated routeId\n\n* **radius**  `nu",
                "operationId": "RouteCorridorGet",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "layerId",
                        "in": "query",
                        "description": ""
                    },
                    {
                        "name": "routeId",
                        "in": "query",
                        "description": ""
                    },
                    {
                        "name": "radius",
                        "in": "query",
                        "description": ""
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": ""
                    },
                    {
                        "name": "app_id",
                        "in": "query",
                        "description": ""
                    },
                    {
                        "name": "app_code",
                        "in": "query",
                        "description": ""
                    }
                ]
            }
        },
        "\/corridor": {
            "get": {
                "summary": "Find Locations using Corridor",
                "description": "*Request a list of user-defined locations near to a given corridor*\n\nThe route corridor consists of a series of latitude, longitude pairs defining the waypoints of a route, along with a defined width. A corridor search is requested using the `corridor` endpoint and by adding a series of comma delimited latitude, longitude waypoints to the `route` parameter of the request URL, along with a `radius` for the search.\n\n\n\n* **layerId**  `text`\n \\- Unique indicator used to retrieve a dataset\n\n* **route",
                "operationId": "CorridorGet",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "layerId",
                        "in": "query",
                        "description": ""
                    },
                    {
                        "name": "route",
                        "in": "query",
                        "description": ""
                    },
                    {
                        "name": "radius",
                        "in": "query",
                        "description": ""
                    },
                    {
                        "name": "app_id",
                        "in": "query",
                        "description": ""
                    },
                    {
                        "name": "app_code",
                        "in": "query",
                        "description": ""
                    }
                ]
            }
        }
    },
    "components": {
        "schemas": []
    }
}