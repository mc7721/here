{
    "openapi": "3.0.0",
    "info": {
        "version": "",
        "title": "Routing API",
        "description": "Examples for routing_nlp_7.2.72 or higher",
        "termsOfService": ""
    },
    "servers": [
        "httpsroute.cit.api.here.com\/routing\/7.2"
    ],
    "paths": {
        "\/calculateroute.json": {
            "get": {
                "summary": "Avoid motorways",
                "description": "*Request a route preferring or avoiding specific types of road*\n\nRouting preferences can be added by extending the `mode` parameter of the request URL by adding a semi-colon delimited list of route link flags. In this case the addition of `motorway:-3` to the `mode` parameter indicates a strict exclusion of motorways. Consult the Routing API Reference for a full description of `mode` parameter and different feature weights.\n\n\n\n* **waypoint0**  `latlng`\n \\- Start point of the route.    e.g. `52.5",
                "operationId": "CalculaterouteJsonGet22",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "waypoint0",
                        "in": "query",
                        "description": ""
                    },
                    {
                        "name": "waypoint1",
                        "in": "query",
                        "description": ""
                    },
                    {
                        "name": "mode",
                        "in": "query",
                        "description": ""
                    },
                    {
                        "name": "app_id",
                        "in": "query",
                        "description": ""
                    },
                    {
                        "name": "app_code",
                        "in": "query",
                        "description": ""
                    }
                ]
            }
        },
        "\/calculatematrix.json": {
            "get": {
                "summary": "Many to many matrix routing",
                "description": "*Matrix routing request with three start points and five destinations*\n\nMatrix calculations are made using the `calculatematrix` endpoint and appending a three start parameters (`start0, ``start1, ``start2)` and multiple consecutively numbered `destination` parameters to the request.\n  \n\n\n\n* **start0**  `latlng`\n \\- First start point for the route calculations.    e.g. `52.515,13.377`  \n\n* **start1**  `latlng`\n \\- Second start point for the route calculations.    e.g. `52.515,13.377`  \n\n* **star",
                "operationId": "CalculatematrixJsonGet2",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "start0",
                        "in": "query",
                        "description": ""
                    },
                    {
                        "name": "start1",
                        "in": "query",
                        "description": ""
                    },
                    {
                        "name": "start2",
                        "in": "query",
                        "description": ""
                    },
                    {
                        "name": "destination0",
                        "in": "query",
                        "description": ""
                    },
                    {
                        "name": "destination1",
                        "in": "query",
                        "description": ""
                    },
                    {
                        "name": "destination2",
                        "in": "query",
                        "description": ""
                    },
                    {
                        "name": "destination3",
                        "in": "query",
                        "description": ""
                    },
                    {
                        "name": "destination4",
                        "in": "query",
                        "description": ""
                    },
                    {
                        "name": "mode",
                        "in": "query",
                        "description": ""
                    },
                    {
                        "name": "app_id",
                        "in": "query",
                        "description": ""
                    },
                    {
                        "name": "app_code",
                        "in": "query",
                        "description": ""
                    }
                ]
            }
        },
        "\/calculateisoline.json": {
            "get": {
                "summary": "Time-based isoline with destination as center",
                "description": "*Request an isoline that will reach a destination within a given time*\n\nTime-based reverse flow requests are made using the `calculateisoline` endpoint and specifying the `destination` and `rangetype=time` parameters.\n\n\n\n* **mode**  `text`\n \\- Routing mode determines how the route is calculated.    e.g. `fastest;car;traffic:disabled.`\n\n* **destination**  `latlng`\n \\- Destination of the reverse flow calculation.    e.g. `52.515,13.377`\n\n* **rangetype**  `text`\n \\- Specifies type of range. Possibl",
                "operationId": "CalculateisolineJsonGet4",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "mode",
                        "in": "query",
                        "description": ""
                    },
                    {
                        "name": "destination",
                        "in": "query",
                        "description": ""
                    },
                    {
                        "name": "rangetype",
                        "in": "query",
                        "description": ""
                    },
                    {
                        "name": "range",
                        "in": "query",
                        "description": ""
                    },
                    {
                        "name": "app_id",
                        "in": "query",
                        "description": ""
                    },
                    {
                        "name": "app_code",
                        "in": "query",
                        "description": ""
                    }
                ]
            }
        },
        "\/getlinkinfo.json": {
            "get": {
                "summary": "Link Information using linkId",
                "description": "*Request detailed information about a path segment in the routing network given a linkid*\n\nLink information can be retrieved using the `getlinkinfo` endpoint, by specifying one or more comma separated linkIds using the `linkids` parameter. The `linkids` have been generated from a previous request. Note that positive direction '+' in link Ids has to be URL encoded.\n  \n  \n\n\n\n* **linkids**  `text`\n \\- Link identifiers for which the detailed information is being requested.\n\n* **app_id**  `text`\n \\- ",
                "operationId": "GetlinkinfoJsonGet2",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "linkids",
                        "in": "query",
                        "description": ""
                    },
                    {
                        "name": "app_id",
                        "in": "query",
                        "description": ""
                    },
                    {
                        "name": "app_code",
                        "in": "query",
                        "description": ""
                    }
                ]
            }
        },
        "\/getroute.json": {
            "get": {
                "summary": "Previously calculated route information",
                "description": "*Request information about a previously calculated route*\n\nPrevious routes can be retrieved using the `getroute` endpoint and appending a `routeid` to the request. The `routeid` in question has been generated from a previous request. Note that server map updates usually invalidates `routeid` value computed on previous map versions. If it is the case, the `routeid` computation should be requested again on the map in current  use.\n  \n\n\n\n* **mode**  `text`\n \\- Routing mode determines how the route ",
                "operationId": "GetrouteJsonGet",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "mode",
                        "in": "query",
                        "description": ""
                    },
                    {
                        "name": "routeid",
                        "in": "query",
                        "description": ""
                    },
                    {
                        "name": "app_id",
                        "in": "query",
                        "description": ""
                    },
                    {
                        "name": "app_code",
                        "in": "query",
                        "description": ""
                    }
                ]
            }
        }
    },
    "components": {
        "schemas": []
    }
}